\section{Comparison with ICTS}
From the pathfinding perspective, the auction can be viewed as a three-level algorithm:
\begin{itemize}
\item  Level 1: A bidding iteration, represented by a tuple of agents' maximal bidding prices denoted $\langle m_1,...,m_k \rangle$
\item  Level 2: Solving a bidding iteration $\langle m_1,...,m_k \rangle$
\item Level 3: Solving a candidate provisional allocation
\end{itemize}

We note that level 2 is equivalent to spanning an ICT with costs $c_1 \leq opt_{1}+m_1,...,c_k \leq opt_{k}+m_k$, where $opt_i$ denotes the cost of the optimal path for $i$ disregarding other agents. However, unlike ICTS these nodes also include ICT nodes with only a subset of the agents. Level 3 is equivalent to the low-level goal test in ICTS.
ICTS and MAPF-iBundle differ in that ICTS performs a breadth-first search on the ICT and performs a goal test on each ICT node, the goal test searches for a feasible solution that includes \emph{all} agents. This requires ICTS to expand all ICT nodes with $C<C^*$ and some nodes with $C=C^*$, where $C^*$ denotes the cost of the optimal solution. In contrast, each iteration of the auction examines candidate allocations corresponding to several ICT nodes, including nodes with only subsets of the agents. This examination of subsets of agents allows the auction to ``skip'' some ICT nodes that ICTS would try to solve. However, this pruning on nodes comes at the cost of solving additional allocations of subset of agents and the overhead of computing revenue and finding the winning allocation.

Let $\delta_i = C^*_{i}-opt_{i}$, where  $C^*_{i}$ denotes the maximal cost of the path for agent $i$ over all possible optimal allocation. We define $\Delta = \sum\limits_{i=1}^k{\delta_i}$. ICTS will need to expand $k^{\Delta}$ ICT nodes until the solution is found because it needs to reach an ICT node where the cost for each agent is exactly $C^*_i = opt_i + \delta_i$, and it expands nodes using breadth-first search. This means it will not need to expand nodes with $C>\Delta$.
MAPF-iBundle might need to expand deeper ICT nodes but it might not need to expand all ICT nodes at each level. Next, we show that MAPF-iBundle  will not consider ICT nodes with $C>\Delta \cdot k$.
%This also bounds the number of iterations in the auction to $\Delta \cdot k$.

\begin{theorem}
MAPF-iBundle will not consider allocations corresponding to ICT nodes with $C>\Delta \cdot k$.
\label{the:delta}
\end{theorem}
To prove this theorem we show that no agent $i$ can reach $m_i>\sum\limits_{j=1}^k{\delta_{j}}$.
%if for every agent $i$, $m_i>=\sum\limits_{j=1}^k{\delta_{j}}$, then the bidding iteration will find a solution (i.e., the provisional allocation will include all agents and the auction will terminate). 
The proof is given in the attached supplement materials.
A direct result of Theorem~\ref{the:delta} is the that number of MAPF-iBundle iterations is at most $k^2\cdot\Delta$.
%
%%\note{Ofra}{the proof is in the sup}
%\begin{proof}
%Let $PA$ denote the set of agents in the provisional allocation and assume that:
%
%(1) $\forall j, m_j>=\sum\limits_{j=1}^k{\delta_j}$
%
%(2) $\exists i$, s.t. $i \notin PA$
%\\
%%It follows from (2) that $\exists i$ such that $i \notin PA$, where $PA$ is the set of agents in the provisional allocation.
%It follows from (1) and (2) that:
%$$
% revenue(PA)<=\sum\limits_{j \neq i}{m_j}
% $$
% We further know that there is a feasible candidate allocation $CA$ that includes all agents, such that
%$$
%revenue(CA)<=\sum\limits_{j=1}^k{m_j-\delta_j}
%$$
%This is true because we know there is a feasible solution with paths at cost $c_j = opt_j+\delta_j$ (follows immediately from the definition of $\delta_j$).
%Because allocation PA was chosen over CA, we have:
%\begin{align*}
%\sum\limits_{j=!i}{m_j}>\sum\limits_{j=1}^k{m_j}-\delta_j  \\
%\implies m_i-\sum\limits{j}{\delta_j} < 0  \\
%\implies \sum\limits{j}{\delta_j}>m_i  \\
%\implies  revenue(PA)>revenue(CA)  \\
%\implies \sum\limits_{j=!i}{m_j}>\sum\limits_{j=1}^k{m_j}-\delta_j  \\
%\implies m_i-\sum\limits{j}{\delta_j} < 0  \\
%\implies  \sum\limits{j}{\delta_j}>m_i
%\end{align*}
%
%
%
%This contradicts assumption (1).
%\end{proof}
%\note{Ofra}{We say this in the self-interested section so possibly remove.}
%We note that ICTS can be viewed as a type of auction, where at each iteration the price is incremented by 1 to \emph{all} agents (i.e. an iteration corresponds to expanding all ICT nodes of a certain cost). Then, it is possible to implement a price adjustment process based on the solution. That is, although agents were told that the price had increased, based on the solution we could adjust their price to a possibly lower price based on the actual solution that was found. 


%\note{Ofra}{What else do we want to say? maybe have an example case study showing which ICT nodes each of the algorithms needed to solve?}